/***********************************************************
*文件名     : db_api.h
*版   本   : v1.0.0.0
*日   期   : 2018.05.03
*说   明   : 数据库相关操作接口
*修改记录: 
************************************************************/


#ifndef DB_API_H
#define DB_API_H

#include "sqlite3.h"

#define DB_DATA_MAX_LEN 128

typedef struct DB DB;

#pragma pack(1)
typedef struct db_data_entry_s
{
	char acData[DB_DATA_MAX_LEN];
}db_data_entry_t;
#pragma pack()

/*************************************************************
*函数:	db_open
*参数:	pcPath :数据库文件路径
*		db :数据库文件指针
*返回值:0表示成功，非0表示失败
*描述:	打开数据库
*************************************************************/
extern DB* 
db_server_start(const char *pcPath);


/*************************************************************
*函数:	db_server_stop
*参数:	db :数据库文件路径
*返回值:0表示成功，非0表示失败
*描述:	关闭数据库
*************************************************************/
extern int
db_server_stop(DB* db);


/*************************************************************
*函数:	db_add
*参数:	db :数据库文件指针
*		pcSql:数据库语句
*返回值:0表示成功，非0表示失败
*描述:	数据库增加条目
*************************************************************/
extern int 
db_add(DB*db, const char *pcSql);
extern int 
db_add_asyn(DB*db, const char *pcSql);

/*************************************************************
*函数:	db_del
*参数:	db :数据库文件指针
*		pcSql:数据库语句
*返回值:0表示成功，非0表示失败
*描述:	数据库删除条目
*************************************************************/
extern int 
db_del(DB*db, const char *pcSql);
extern int 
db_del_asyn(DB*db, const char *pcSql);

/*************************************************************
*函数:	db_set
*参数:	db :数据库文件指针
*		pcSql:数据库语句
*返回值:0表示成功，非0表示失败
*描述:	修改数据库条目
*************************************************************/
extern int 
db_set(DB*db, const char *pcSql);
extern int 
db_set_asyn(DB*db, const char *pcSql);

/*************************************************************
*函数:	db_get
*参数:	db :数据库文件指针
*		pcSql:数据库语句
*返回值:0表示成功，非0表示失败
*描述:	查询数据库条目
*************************************************************/
extern int 
db_get(DB*db, const char *pcSql, db_data_entry_t *pstData, int* piRow, int* piRank);

/*************************************************************
*函数:	db_compatibility
*参数:	db :数据库文件指针
*		iCompatibilityType:兼容性处理类型
*返回值:0表示成功，非0表示失败
*描述:	数据库兼容性处理，主要用于前后版本数据库发生改变，此处需要做兼容处理
*************************************************************/
extern int 
db_compatibility(DB*db, int iCompatibilityType);


#endif /* DB_API_H */

